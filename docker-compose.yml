version: "0.0.1"

services:
  reverse-proxy:
    container_name: nginx-reverse-proxy
    image: nginx-reverse-proxy
    build:
      context: ./image-docker
      dockerfile: Dockerfile.nginx
    ports:
      - 8080:80
    volumes:
      - ./nginx/log-nginx-reverse-proxy:/var/log/nginx/
      - ./nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - networks-host
      
  angular1:
    container_name: 1-nginx-angular
    image: 1-nginx-angular
    build:
      context: ./image-docker
      dockerfile: Dockerfile.angular
    volumes:
      - ./html:/usr/share/nginx/html
      - ./nginx/conf/angular1.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/log-nginx-angular-1:/var/log/nginx/
    networks:
      - networks-host

  angular2:
    container_name: 2-nginx-angular
    image: 2-nginx-angular
    build:
      context: ./image-docker
      dockerfile: Dockerfile.nginx
    volumes:
      - ./nginx/conf/angular2.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/log-nginx-angular-2:/var/log/nginx/
      - ./html:/usr/share/nginx/html
    networks:
      - networks-host

  web-oops:
    container_name: web-oops
    image: web-oops
    build:
      context: ./image-docker
      dockerfile: Dockerfile.nginx
    volumes:
      - ./nginx/conf/oops.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/log-oops:/var/log/nginx/
      - ./html:/usr/share/nginx/html
    networks:
      - networks-host

networks:
  networks-host:
    driver: bridge